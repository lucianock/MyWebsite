export const es = {
  // Navigation
  nav: {
    home: "INICIO",
    aboutMe: "SOBRE M√ç",
    resume: "RESUMEN",
    skills: "HABILIDAD",
    portfolio: "PORTFOLIO",
    blogs: "BLOGS",
    contactMe: "CONTACTAME",
    services: "SERVICIOS",
    feedback: "FEEDBACK",
    elements: "ELEMENTOS",
  },

  // Section Titles
  sections: {
    about: "Sobre",
    aboutMe: "M√≠",
    resume: "Resumen",
    skills: "Habilidades",
    mySkills: "Mis Habilidades",
    contact: "Cont√°ctame",
    services: "Servicios",
    education: "EDUCACI√ìN",
    experience: "EXPERIENCIA",
    portfolio: "Portafolio",
    blogs: "Blog"
  },

  // Hero Section
  hero: {
    name: "Luciano Campos Kriegl",
    designation: "Desarrollador Full Stack",
    description: "Trabajo en el desarrollo y mantenimiento de sistemas de gesti√≥n a medida para la industria farmac√©utica, incluyendo CRMs personalizados, integraci√≥n de APIs, desarrollo de m√≥dulos espec√≠ficos y gesti√≥n de m√©tricas. Participo activamente en la evoluci√≥n t√©cnica de estas soluciones, incluyendo despliegues, automatizaciones y configuraci√≥n de servidores.",
    downloadCV: "DESCARGAR CV",
    typewriter1: "Soy un Desarrollador Full Stack con pasi√≥n por construir sitios web, aplicaciones web y software que impulsan el √©xito.",
    typewriter2: "Mi objetivo es crear soluciones que resuelvan problemas reales y generen valor para las personas."
  },

  // About Section
  about: {
    location: "Rosario, Argentina",
    phone: "+54 341 658 9951",
    email: "lucianocampos.k@gmail.com",
    website: "www.lucianock.com"
  },

  // Fun Facts
  funFacts: {
    projectsCompleted: "PROYECTOS REALIZADOS",
    contributions: "CONTRIBUCIONES",
    hoursWorked: "HORAS TRABAJADAS"
  },

  // Education
  education: {
    softwareDev: "T√âCNICO SUPERIOR EN DESARROLLO DE SOFTWARE",
    softwareDevDesc: "Instituto Urquiza - Formaci√≥n completa en desarrollo de software y programaci√≥n.",
    laravelMVC: "LARAVEL MVC",
    laravelMVCDesc: "EducacionIT - Curso especializado en Laravel MVC para desarrollo web avanzado.",
    phpArchitecture: "ARQUITECTURA PHP AVANZADA",
    phpArchitectureDesc: "EducacionIT - Formaci√≥n en patrones de dise√±o y arquitectura avanzada en PHP.",
    advancedJS: "JAVASCRIPT AVANZADO",
    advancedJSDesc: "EducacionIT - Especializaci√≥n en JavaScript moderno y frameworks.",
    designPatterns: "PATRONES DE DISE√ëO",
    designPatternsDesc: "EducacionIT - Formaci√≥n en patrones de dise√±o y mejores pr√°cticas de desarrollo.",
    pythonMaster: "MASTER EN PYTHON",
    pythonMasterDesc: "Udemy - Formaci√≥n completa en Python para desarrollo backend y automatizaci√≥n."
  },

  // Experience
  experience: {
    blackpath: "BLACKPATH",
    blackpathDesc: "Aplicaci√≥n web desarrollada con Laravel que permite escanear dominios para detectar vulnerabilidades. Integra herramientas como Nmap, WhatWeb y Gobuster, presentando los resultados en una interfaz sencilla y amigable, pensada para usuarios sin conocimientos t√©cnicos avanzados. Permite exportar reportes claros y organizados, facilitando la identificaci√≥n r√°pida de riesgos de seguridad.",
    secudash: "SECUDASH",
    secudashDesc: "Dashboard de ciberseguridad desarrollado con Laravel y Vite para gestionar accesos, credenciales y publicaciones relevantes. Integraci√≥n con Bitwarden autohospedado, scraping de LinkedIn por palabras clave y visualizaci√≥n segmentada seg√∫n roles. Arquitectura escalable, segura y orientada a automatizaci√≥n de tareas.",
    nextjob: "NextJob - Portal de Empleos",
    nextjobDesc: "Plataforma integral de b√∫squeda y publicaci√≥n de empleos con filtrado avanzado y gesti√≥n de usuarios. Incluye perfiles de empresas, aplicaciones de trabajo, panel de administraci√≥n y dise√±o responsivo. Construida con Laravel y Tailwind CSS.",
    idealsur: "Idealsur.com ‚Äì Remoto (CABA)",
    idealsurDesc: "Desarrollo de CRMs orientados a la industria farmac√©utica, principalmente con PHP, JavaScript y MySQL. Participaci√≥n en todo el ciclo: an√°lisis de requerimientos, dise√±o, desarrollo, testing y soporte. Integraci√≥n de APIs externas y generaci√≥n de reportes personalizados para clientes. Configuraci√≥n y soporte de servidores, despliegues desde entorno local a producci√≥n, y gesti√≥n de bases de datos. Colaboraci√≥n t√©cnica en entornos √°giles, revisi√≥n de c√≥digo y promoci√≥n de buenas pr√°cticas."
  },

  // Services
  services: {
    webDevelopment: "DESARROLLO WEB",
    webDevelopmentDesc: "Desarrollo web full-stack con tecnolog√≠as modernas y mejores pr√°cticas.",
    seoServices: "SERVICIOS SEO",
    seoServicesDesc: "Optimizaci√≥n para motores de b√∫squeda para mejorar la visibilidad de tu sitio web.",
    mediaMarketing: "MARKETING DIGITAL",
    mediaMarketingDesc: "Estrategias de marketing digital para promover tu negocio en l√≠nea.",
    graphicsDesign: "DISE√ëO GR√ÅFICO",
    graphicsDesignDesc: "Soluciones de dise√±o creativo para tu marca y materiales de marketing.",
    contentWriting: "ESCRITURA DE CONTENIDO",
    contentWritingDesc: "Creaci√≥n profesional de contenido para sitios web, blogs y campa√±as de marketing.",
    webDesign: "DISE√ëO WEB",
    webDesignDesc: "Dise√±o web centrado en el usuario con principios modernos de UI/UX."
  },

  // Contact
  contact: {
    phoneNumber: "N√öMERO DE TEL√âFONO",
    emailAddress: "DIRECCI√ìN DE EMAIL",
    myLocation: "MI UBICACI√ìN",
    website: "SITIO WEB"
  },

  // Skills
  skills: {
    php: "PHP",
    mysql: "MySQL",
    javascript: "JavaScript",
    laravel: "Laravel"
  },

  // Social Media
  social: {
    linkedin: "LINKEDIN",
    github: "GITHUB",
    whatsapp: "WHATSAPP",
  },

  // Blog
  blog: {
    awsEc2Gratis: "C√≥mo tener tu propio sitio web gratis con EC2 (y sin volverte loco)",
    awsEc2GratisDesc: "S√≠, le√≠ste bien: gratis. O casi. En este post te cuento c√≥mo poner tu sitio web online usando Amazon EC2 sin pagar un peso (al menos por un buen tiempo).",
    dockerPrincipiantes: "Docker para Principiantes: Gu√≠a Pr√°ctica (Sin Complicaciones)",
    dockerPrincipiantesDesc: "¬øTe da miedo Docker? No te preocupes, en este post te explico de la forma m√°s simple posible c√≥mo empezar a usar contenedores sin volverte loco. ¬°Es m√°s f√°cil de lo que pens√°s!",
    linuxCheatsheet: "Gu√≠a r√°pida ‚Äî Comandos esenciales para tu servidor Linux",
    linuxCheatsheetDesc: "Comandos listos para copiar, buenas pr√°cticas y script √∫til para tu d√≠a a d√≠a en servidores Linux.",
    tiendanubeApiPostman: "Gu√≠a pr√°ctica: probar la API de Tiendanube Partners con Postman",
    tiendanubeApiPostmanDesc: "Autenticaci√≥n OAuth, obtenci√≥n de token y requests de productos en minutos.",
    postmanApiGuide: "Gu√≠a pr√°ctica: probar APIs RESTful con Postman (usando ReqRes)",
    postmanApiGuideDesc: "GET, POST, PUT y DELETE con variables de entorno y tests autom√°ticos.",
    // Complete article content in Spanish
    awsEc2GratisContent: `
      <h3>‚úã Antes de empezar: ¬øqu√© es EC2?</h3>
      <p>EC2 (Elastic Compute Cloud) es un servicio de Amazon Web Services (AWS) que te permite levantar una m√°quina virtual (como si fuera una PC remota) y usarla como servidor. Ideal para alojar tu web, hacer pruebas, levantar APIs o jugar con proyectos personales.</p>
      
      <p>AWS te da <strong>un a√±o gratis</strong> del plan Free Tier. ¬°Aprovechalo!</p>
      
      <h3>üöÄ Paso 1 ‚Äì Crear tu cuenta en AWS</h3>
      <ol>
        <li>And√° a <a href="https://aws.amazon.com/" target="_blank">aws.amazon.com</a> y registrate.</li>
        <li>Vas a necesitar una tarjeta de cr√©dito. Tranca, no te cobran mientras est√©s en el plan gratuito.</li>
        <li>Activ√°s tu cuenta y listo, entr√°s al dashboard.</li>
      </ol>
      
      <h3>üñ•Ô∏è Paso 2 ‚Äì Lanzar tu instancia EC2</h3>
      <ol>
        <li>En el buscador pon√© "EC2" y hac√© clic.</li>
        <li>Eleg√≠ "Launch instance".</li>
        <li>Eleg√≠ una imagen de sistema (te recomiendo Ubuntu Server 22.04).</li>
        <li>En "Instance type" seleccion√° <code>t2.micro</code> (es la gratuita).</li>
        <li>Eleg√≠ o cre√° un nuevo par de llaves (guardalo bien, sin esto no acced√©s).</li>
        <li>Hac√© clic en "Launch instance".</li>
      </ol>
      
      <p>¬°Ya ten√©s tu servidor online!</p>
      
      <h3>üîê Paso 3 ‚Äì Acceder por SSH</h3>
      <p>Si est√°s en Linux o Mac:</p>
      <pre><code>chmod 400 tu-archivo.pem
ssh -i "tu-archivo.pem" ubuntu@tu-ip-publica</code></pre>
      
      <p>En Windows pod√©s usar PuTTY o el nuevo terminal de Windows con OpenSSH.</p>
      
      <h3>üåê Paso 4 ‚Äì Instalar tu web</h3>
      <p>Un ejemplo r√°pido con Apache:</p>
      <pre><code>sudo apt update && sudo apt install apache2 -y</code></pre>
      
      <p>Luego, copi√° tus archivos al directorio <code>/var/www/html/</code>.</p>
      
      <p>Pod√©s subir tu portfolio, un proyecto Laravel, una landing‚Ä¶ lo que sea.</p>
      
      <h3>üì° Paso 5 ‚Äì Abrir el puerto 80</h3>
      <p>Ten√©s que permitir el tr√°fico HTTP:</p>
      <ol>
        <li>En el panel de EC2, and√° a tu instancia.</li>
        <li>En "Security groups" edit√° las reglas de ingreso.</li>
        <li>Agreg√° una nueva:
          <ul>
            <li>Type: HTTP</li>
            <li>Port: 80</li>
            <li>Source: Anywhere</li>
          </ul>
        </li>
      </ol>
      
      <p>Listo. Abr√≠ tu IP en el navegador‚Ä¶ ¬°y magia! ü™Ñ</p>
      
      <h3>üí° Tips finales</h3>
      <ul>
        <li>Us√° un dominio gratis de <a href="https://www.freenom.com/" target="_blank">Freenom</a> y apuntalo a tu IP.</li>
        <li>Pod√©s levantar un servidor PHP o incluso Node.js si quer√©s.</li>
        <li>Hac√© backups: EC2 puede reiniciarse y perder cambios si no us√°s volumenes persistentes.</li>
      </ul>
      
      <h3>Mi experiencia personal</h3>
      <p>Descubr√≠ esto casi de casualidad, y me vol√≥ la cabeza. Poder tener un servidor <em>gratis</em>, sin depender de plataformas externas y con control total, es una joyita para cualquier developer o curioso. Lo estoy usando para montar mis proyectos personales y probar herramientas nuevas de forma segura.</p>
    `,
    tiendanubeApiPostmanContent: `
      <h3>üöÄ Paso 1 ‚Äì Crear tu aplicaci√≥n en Tiendanube Partners</h3>
      <ol>
        <li>Dir√≠gete al <a href="https://partners.tiendanube.com/" target="_blank">Portal de Socios de Tiendanube</a> y reg√≠strate o inicia sesi√≥n.</li>
        <li>En el panel de administraci√≥n, ve a la secci√≥n <strong>"Mis aplicaciones"</strong> y haz clic en <strong>"Crear nueva aplicaci√≥n"</strong>.</li>
        <li>Completa los campos requeridos:
          <ul>
            <li><strong>Nombre de la aplicaci√≥n</strong>: Elige un nombre representativo.</li>
            <li><strong>URL de redirecci√≥n</strong>: La URL a la que se redirigir√° al usuario despu√©s de autorizar la aplicaci√≥n.</li>
            <li><strong>Scopes</strong>: Selecciona los permisos necesarios, por ejemplo, <code>read_products</code>, <code>write_products</code>, etc.</li>
          </ul>
        </li>
        <li>Una vez creada, toma nota del <strong>ID de la aplicaci√≥n</strong> y el <strong>Secreto de cliente</strong>.</li>
      </ol>

      <hr />

      <h3>üîê Paso 2 ‚Äì Obtener el token de acceso</h3>
      <ol>
        <li><strong>Redirige al usuario a la URL de autorizaci√≥n</strong>:</li>
      </ol>
      <pre><code>https://www.tiendanube.com/apps/{app_id}/authorize?scope=read_products,write_products&state=csrf-token</code></pre>
      <p>Reemplaza <code>{app_id}</code> por el ID de tu aplicaci√≥n. <code>state</code> es opcional pero recomendado para prevenir ataques CSRF.</p>

      <p><strong>El usuario ser√° redirigido</strong> a tu URL de redirecci√≥n con un c√≥digo de autorizaci√≥n:</p>
      <pre><code>https://tu-dominio.com/callback?code=authorization_code&state=csrf-token</code></pre>

      <p><strong>Intercambia el c√≥digo por un token de acceso</strong>:</p>
      <p>POST a:</p>
      <pre><code>https://www.tiendanube.com/apps/authorize/token</code></pre>
      <p>Body JSON:</p>
      <pre><code>{
  "client_id": "tu_client_id",
  "client_secret": "tu_client_secret",
  "code": "authorization_code",
  "grant_type": "authorization_code"
}</code></pre>
      <p>La respuesta contiene el <code>access_token</code>.</p>

      <hr />

      <h3>üõí Paso 3 ‚Äì Consultar productos</h3>
      <ol>
        <li>Configura un request GET en POSTMAN:</li>
      </ol>
      <ul>
        <li>URL: <code>https://api.tiendanube.com/v1/{store_id}/products.json</code></li>
        <li>Header: <code>Authorization: Bearer token_de_acceso</code></li>
      </ul>
      <p>Ejecuta y recibir√°s un JSON con los productos.</p>

      <hr />

      <h3>üìù Paso 4 ‚Äì Crear un nuevo producto</h3>
      <p>Configura un request POST:</p>
      <ul>
        <li>URL: <code>https://api.tiendanube.com/v1/{store_id}/products.json</code></li>
        <li>Headers:
          <ul>
            <li><code>Authorization: Bearer token_de_acceso</code></li>
            <li><code>Content-Type: application/json</code></li>
          </ul>
        </li>
      </ul>
      <p>Body JSON:</p>
      <pre><code>{
  "product": {
    "title": "Nombre del producto",
    "price": 1000,
    "description": "Descripci√≥n del producto",
    "available_on": "2025-09-16",
    "tags": ["etiqueta1", "etiqueta2"]
  }
}</code></pre>

      <hr />

      <h3>üí° Tips finales</h3>
      <ul>
        <li>Usa variables de entorno en POSTMAN para manejar el <code>access_token</code> y URLs.</li>
        <li>Maneja errores y respuestas de la API para integraciones robustas.</li>
        <li>Consulta la <a href="https://tiendanube.github.io/api-documentation/" target="_blank">documentaci√≥n oficial</a> para explorar m√°s endpoints.</li>
      </ul>

      <h3>üß™ Mi experiencia personal</h3>
      <p>Probar la API de Tiendanube me permiti√≥ entender c√≥mo autenticar, leer y modificar datos de una tienda real sin riesgos. Postman se vuelve indispensable para probar endpoints y automatizar requests, sobre todo en integraciones con Laravel o Node.</p>
    `,
    postmanApiGuideContent: `
      <h3>üöÄ Paso 1 ‚Äì Descargar e instalar POSTMAN</h3>
      <ol>
        <li>And√° a <a href="https://www.postman.com/downloads/" target="_blank">postman.com/downloads</a> y descarg√° la versi√≥n para tu sistema.</li>
        <li>Instalalo y abrilo.</li>
        <li>Cre√° una cuenta para guardar tus colecciones en la nube (opcional, pero recomendado).</li>
      </ol>

      <hr />

      <h3>üñ•Ô∏è Paso 2 ‚Äì Crear tu colecci√≥n</h3>
      <ol>
        <li>En la barra lateral izquierda hac√© clic en ‚ÄúCollections‚Äù.</li>
        <li>Presion√° ‚Äú+ New Collection‚Äù y pon√© nombre: <code>PruebaReqRes</code>.</li>
        <li>Ah√≠ vamos a guardar todos nuestros requests.</li>
      </ol>

      <hr />

      <h3>üîó Paso 3 ‚Äì Probar un GET (obtener usuarios)</h3>
      <ol>
        <li>Nuevo request: <strong>Obtener usuarios</strong></li>
        <li>M√©todo: <code>GET</code></li>
      </ol>
      <pre><code>https://reqres.in/api/users?page=2</code></pre>
      <p>‚ÄúSend‚Äù y recib√≠s un JSON con usuarios reales de prueba.</p>

      <hr />

      <h3>‚úèÔ∏è Paso 4 ‚Äì Probar un POST (crear usuario)</h3>
      <ol>
        <li>Nuevo request: <strong>Crear usuario</strong></li>
      </ol>
      <pre><code>https://reqres.in/api/users</code></pre>
      <p>Body (raw JSON):</p>
      <pre><code>{
  "name": "Luciano",
  "job": "Developer"
}</code></pre>

      <hr />

      <h3>üîÑ Paso 5 ‚Äì Probar PUT (actualizar usuario)</h3>
      <pre><code>https://reqres.in/api/users/2</code></pre>
      <p>Body (raw JSON):</p>
      <pre><code>{
  "name": "Luciano",
  "job": "Senior Developer"
}</code></pre>

      <hr />

      <h3>üóëÔ∏è Paso 6 ‚Äì Probar DELETE (borrar usuario)</h3>
      <pre><code>https://reqres.in/api/users/2</code></pre>

      <hr />

      <h3>üõ†Ô∏è Paso 7 ‚Äì Usar variables de entorno</h3>
      <p>Variable: <code>{{base_url}}</code> = <code>https://reqres.in/api</code></p>

      <hr />

      <h3>‚úÖ Paso 8 ‚Äì Agregar tests autom√°ticos</h3>
      <pre><code>pm.test("Status code is 200", function () {
  pm.response.to.have.status(200);
});

pm.test("Response tiene datos de usuarios", function () {
  var jsonData = pm.response.json();
  pm.expect(jsonData.data.length).to.be.above(0);
});</code></pre>

      <h3>üß™ Mi experiencia personal</h3>
      <p>Al probar APIs reales, entend√©s c√≥mo manejar errores, validar respuestas y automatizar pruebas. Postman es clave para integraciones con Laravel o Node.</p>
    `,
    // Blog page translations
    hero: {
      heading: "Blog",
      subtitle: "Art√≠culos sobre desarrollo web, Laravel y tecnolog√≠as modernas",
      lastBreadcrumb: "BLOG"
    },
    singleHero: {
      heading: "Art√≠culo",
      lastBreadcrumb: "ART√çCULO"
    },
    technology: "Tecnolog√≠a",
    development: "Desarrollo",
    loadMore: "CARGAR M√ÅS",
    readArticle: "Leer Art√≠culo",
    viewAllArticles: "VER TODOS LOS ART√çCULOS",
    backToBlog: "‚Üê Volver al Blog"
  },

  // Language switch translations
  languageSwitch: {
    toSpanish: "Cambiar a Espa√±ol",
    toEnglish: "Cambiar a Ingl√©s"
  },

  // Form labels
  form: {
    fullName: "Nombre Completo",
    emailAddress: "Direcci√≥n de Email",
    subject: "Asunto",
    yourMessage: "Tu Mensaje",
    sendMessage: "ENVIAR MENSAJE"
  },

  // Common
  common: {
    hello: "Hola",
    iAm: "Soy",
    chat: "Chatear"
  },

  // Elements
  elements: {
    heading: "Componentes",
    title: "COMPONENTES"
  },

  // Portfolio Section
  portfolio: {
    toolvibe: "ToolVibe - Herramientas √∫tiles",
    toolvibeDesc: "Plataforma de herramientas web interactivas con generador de c√≥digos QR, calculadoras y conversores. Optimizado para SEO y rendimiento, construido con Laravel 10 y Vue 3.",
    blackpath: "BlackPath - Esc√°ner de Seguridad",
    blackpathDesc: "Aplicaci√≥n web de escaneo de vulnerabilidades para an√°lisis de dominios usando Nmap, WhatWeb y Gobuster. Incluye m√∫ltiples niveles de escaneo con resultados detallados e informes exportables para auditor√≠as de seguridad.",
    nextjob: "NextJob - Portal de Empleos",
    nextjobDesc: "Plataforma integral de b√∫squeda y publicaci√≥n de empleos con filtrado avanzado, perfiles de empresas y gesti√≥n de usuarios. Incluye panel de administraci√≥n y dise√±o responsivo para una experiencia de usuario fluida.",
    secudash: "SecuDash - Gesti√≥n de Seguridad",
    secudashDesc: "Dashboard de seguridad empresarial con monitoreo en tiempo real y detecci√≥n automatizada de amenazas. Incluye escaneo de vulnerabilidades, flujos de respuesta a incidentes y control de acceso basado en roles.",
    breeze: "BrandFlow - Gestor de Productos en Laravel",
    breezeDesc: "Aplicaci√≥n para gesti√≥n de marcas y productos construida con Laravel y Vite. Incluye autenticaci√≥n completa, Eloquent ORM, plantillas Blade y operaciones CRUD avanzadas con validaci√≥n de formularios.",
    viewDemo: "Ver Demo",
    viewCode: "Ver C√≥digo"
  }
};